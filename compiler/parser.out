Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    C_BRACE
    ELSE
    EQUALS
    G_THAN
    ID
    IF
    L_THAN
    O_BRACE
    PRINT
    PRINTLN
    WHILE

Grammar

Rule 0     S' -> start
Rule 1     start -> start variable_assignment
Rule 2     start -> variable_assignment
Rule 3     operator -> PLUS
Rule 4     operator -> MINUS
Rule 5     operator -> MULT
Rule 6     operator -> DIV
Rule 7     expr -> O_PAREN VARIABLE_NAME operator VARIABLE_NAME C_PAREN
Rule 8     expr -> O_PAREN VARIABLE_NAME operator NUMBER C_PAREN
Rule 9     expr -> O_PAREN VARIABLE_NAME operator expr C_PAREN
Rule 10    expr -> O_PAREN NUMBER operator VARIABLE_NAME C_PAREN
Rule 11    expr -> O_PAREN expr operator VARIABLE_NAME C_PAREN
Rule 12    expr -> O_PAREN expr operator expr C_PAREN
Rule 13    expr -> O_PAREN NUMBER operator expr C_PAREN
Rule 14    expr -> O_PAREN expr operator NUMBER C_PAREN
Rule 15    expr -> O_PAREN NUMBER operator NUMBER C_PAREN
Rule 16    variable_assignment -> VARIABLE_NAME ASSIGN NUMBER SEMICOLON
Rule 17    variable_assignment -> VARIABLE_NAME ASSIGN expr SEMICOLON
Rule 18    variable_assignment -> VARIABLE_NAME ASSIGN STRING SEMICOLON
Rule 19    variable_assignment -> VARIABLE_NAME ASSIGN VARIABLE_NAME SEMICOLON

Terminals, with rules where they appear

ASSIGN               : 16 17 18 19
COMMENT              : 
C_BRACE              : 
C_PAREN              : 7 8 9 10 11 12 13 14 15
DIV                  : 6
ELSE                 : 
EQUALS               : 
G_THAN               : 
ID                   : 
IF                   : 
L_THAN               : 
MINUS                : 4
MULT                 : 5
NUMBER               : 8 10 13 14 15 15 16
O_BRACE              : 
O_PAREN              : 7 8 9 10 11 12 13 14 15
PLUS                 : 3
PRINT                : 
PRINTLN              : 
SEMICOLON            : 16 17 18 19
STRING               : 18
VARIABLE_NAME        : 7 7 8 9 10 11 16 17 18 19 19
WHILE                : 
error                : 

Nonterminals, with rules where they appear

expr                 : 9 11 12 12 13 14 17
operator             : 7 8 9 10 11 12 13 14 15
start                : 1 0
variable_assignment  : 1 2

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . start variable_assignment
    (2) start -> . variable_assignment
    (16) variable_assignment -> . VARIABLE_NAME ASSIGN NUMBER SEMICOLON
    (17) variable_assignment -> . VARIABLE_NAME ASSIGN expr SEMICOLON
    (18) variable_assignment -> . VARIABLE_NAME ASSIGN STRING SEMICOLON
    (19) variable_assignment -> . VARIABLE_NAME ASSIGN VARIABLE_NAME SEMICOLON

    VARIABLE_NAME   shift and go to state 3

    start                          shift and go to state 1
    variable_assignment            shift and go to state 2

state 1

    (0) S' -> start .
    (1) start -> start . variable_assignment
    (16) variable_assignment -> . VARIABLE_NAME ASSIGN NUMBER SEMICOLON
    (17) variable_assignment -> . VARIABLE_NAME ASSIGN expr SEMICOLON
    (18) variable_assignment -> . VARIABLE_NAME ASSIGN STRING SEMICOLON
    (19) variable_assignment -> . VARIABLE_NAME ASSIGN VARIABLE_NAME SEMICOLON

    VARIABLE_NAME   shift and go to state 3

    variable_assignment            shift and go to state 4

state 2

    (2) start -> variable_assignment .

    VARIABLE_NAME   reduce using rule 2 (start -> variable_assignment .)
    $end            reduce using rule 2 (start -> variable_assignment .)


state 3

    (16) variable_assignment -> VARIABLE_NAME . ASSIGN NUMBER SEMICOLON
    (17) variable_assignment -> VARIABLE_NAME . ASSIGN expr SEMICOLON
    (18) variable_assignment -> VARIABLE_NAME . ASSIGN STRING SEMICOLON
    (19) variable_assignment -> VARIABLE_NAME . ASSIGN VARIABLE_NAME SEMICOLON

    ASSIGN          shift and go to state 5


state 4

    (1) start -> start variable_assignment .

    VARIABLE_NAME   reduce using rule 1 (start -> start variable_assignment .)
    $end            reduce using rule 1 (start -> start variable_assignment .)


state 5

    (16) variable_assignment -> VARIABLE_NAME ASSIGN . NUMBER SEMICOLON
    (17) variable_assignment -> VARIABLE_NAME ASSIGN . expr SEMICOLON
    (18) variable_assignment -> VARIABLE_NAME ASSIGN . STRING SEMICOLON
    (19) variable_assignment -> VARIABLE_NAME ASSIGN . VARIABLE_NAME SEMICOLON
    (7) expr -> . O_PAREN VARIABLE_NAME operator VARIABLE_NAME C_PAREN
    (8) expr -> . O_PAREN VARIABLE_NAME operator NUMBER C_PAREN
    (9) expr -> . O_PAREN VARIABLE_NAME operator expr C_PAREN
    (10) expr -> . O_PAREN NUMBER operator VARIABLE_NAME C_PAREN
    (11) expr -> . O_PAREN expr operator VARIABLE_NAME C_PAREN
    (12) expr -> . O_PAREN expr operator expr C_PAREN
    (13) expr -> . O_PAREN NUMBER operator expr C_PAREN
    (14) expr -> . O_PAREN expr operator NUMBER C_PAREN
    (15) expr -> . O_PAREN NUMBER operator NUMBER C_PAREN

    NUMBER          shift and go to state 7
    STRING          shift and go to state 9
    VARIABLE_NAME   shift and go to state 6
    O_PAREN         shift and go to state 10

    expr                           shift and go to state 8

state 6

    (19) variable_assignment -> VARIABLE_NAME ASSIGN VARIABLE_NAME . SEMICOLON

    SEMICOLON       shift and go to state 11


state 7

    (16) variable_assignment -> VARIABLE_NAME ASSIGN NUMBER . SEMICOLON

    SEMICOLON       shift and go to state 12


state 8

    (17) variable_assignment -> VARIABLE_NAME ASSIGN expr . SEMICOLON

    SEMICOLON       shift and go to state 13


state 9

    (18) variable_assignment -> VARIABLE_NAME ASSIGN STRING . SEMICOLON

    SEMICOLON       shift and go to state 14


state 10

    (7) expr -> O_PAREN . VARIABLE_NAME operator VARIABLE_NAME C_PAREN
    (8) expr -> O_PAREN . VARIABLE_NAME operator NUMBER C_PAREN
    (9) expr -> O_PAREN . VARIABLE_NAME operator expr C_PAREN
    (10) expr -> O_PAREN . NUMBER operator VARIABLE_NAME C_PAREN
    (11) expr -> O_PAREN . expr operator VARIABLE_NAME C_PAREN
    (12) expr -> O_PAREN . expr operator expr C_PAREN
    (13) expr -> O_PAREN . NUMBER operator expr C_PAREN
    (14) expr -> O_PAREN . expr operator NUMBER C_PAREN
    (15) expr -> O_PAREN . NUMBER operator NUMBER C_PAREN
    (7) expr -> . O_PAREN VARIABLE_NAME operator VARIABLE_NAME C_PAREN
    (8) expr -> . O_PAREN VARIABLE_NAME operator NUMBER C_PAREN
    (9) expr -> . O_PAREN VARIABLE_NAME operator expr C_PAREN
    (10) expr -> . O_PAREN NUMBER operator VARIABLE_NAME C_PAREN
    (11) expr -> . O_PAREN expr operator VARIABLE_NAME C_PAREN
    (12) expr -> . O_PAREN expr operator expr C_PAREN
    (13) expr -> . O_PAREN NUMBER operator expr C_PAREN
    (14) expr -> . O_PAREN expr operator NUMBER C_PAREN
    (15) expr -> . O_PAREN NUMBER operator NUMBER C_PAREN

    VARIABLE_NAME   shift and go to state 15
    NUMBER          shift and go to state 16
    O_PAREN         shift and go to state 10

    expr                           shift and go to state 17

state 11

    (19) variable_assignment -> VARIABLE_NAME ASSIGN VARIABLE_NAME SEMICOLON .

    VARIABLE_NAME   reduce using rule 19 (variable_assignment -> VARIABLE_NAME ASSIGN VARIABLE_NAME SEMICOLON .)
    $end            reduce using rule 19 (variable_assignment -> VARIABLE_NAME ASSIGN VARIABLE_NAME SEMICOLON .)


state 12

    (16) variable_assignment -> VARIABLE_NAME ASSIGN NUMBER SEMICOLON .

    VARIABLE_NAME   reduce using rule 16 (variable_assignment -> VARIABLE_NAME ASSIGN NUMBER SEMICOLON .)
    $end            reduce using rule 16 (variable_assignment -> VARIABLE_NAME ASSIGN NUMBER SEMICOLON .)


state 13

    (17) variable_assignment -> VARIABLE_NAME ASSIGN expr SEMICOLON .

    VARIABLE_NAME   reduce using rule 17 (variable_assignment -> VARIABLE_NAME ASSIGN expr SEMICOLON .)
    $end            reduce using rule 17 (variable_assignment -> VARIABLE_NAME ASSIGN expr SEMICOLON .)


state 14

    (18) variable_assignment -> VARIABLE_NAME ASSIGN STRING SEMICOLON .

    VARIABLE_NAME   reduce using rule 18 (variable_assignment -> VARIABLE_NAME ASSIGN STRING SEMICOLON .)
    $end            reduce using rule 18 (variable_assignment -> VARIABLE_NAME ASSIGN STRING SEMICOLON .)


state 15

    (7) expr -> O_PAREN VARIABLE_NAME . operator VARIABLE_NAME C_PAREN
    (8) expr -> O_PAREN VARIABLE_NAME . operator NUMBER C_PAREN
    (9) expr -> O_PAREN VARIABLE_NAME . operator expr C_PAREN
    (3) operator -> . PLUS
    (4) operator -> . MINUS
    (5) operator -> . MULT
    (6) operator -> . DIV

    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULT            shift and go to state 21
    DIV             shift and go to state 22

    operator                       shift and go to state 18

state 16

    (10) expr -> O_PAREN NUMBER . operator VARIABLE_NAME C_PAREN
    (13) expr -> O_PAREN NUMBER . operator expr C_PAREN
    (15) expr -> O_PAREN NUMBER . operator NUMBER C_PAREN
    (3) operator -> . PLUS
    (4) operator -> . MINUS
    (5) operator -> . MULT
    (6) operator -> . DIV

    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULT            shift and go to state 21
    DIV             shift and go to state 22

    operator                       shift and go to state 23

state 17

    (11) expr -> O_PAREN expr . operator VARIABLE_NAME C_PAREN
    (12) expr -> O_PAREN expr . operator expr C_PAREN
    (14) expr -> O_PAREN expr . operator NUMBER C_PAREN
    (3) operator -> . PLUS
    (4) operator -> . MINUS
    (5) operator -> . MULT
    (6) operator -> . DIV

    PLUS            shift and go to state 19
    MINUS           shift and go to state 20
    MULT            shift and go to state 21
    DIV             shift and go to state 22

    operator                       shift and go to state 24

state 18

    (7) expr -> O_PAREN VARIABLE_NAME operator . VARIABLE_NAME C_PAREN
    (8) expr -> O_PAREN VARIABLE_NAME operator . NUMBER C_PAREN
    (9) expr -> O_PAREN VARIABLE_NAME operator . expr C_PAREN
    (7) expr -> . O_PAREN VARIABLE_NAME operator VARIABLE_NAME C_PAREN
    (8) expr -> . O_PAREN VARIABLE_NAME operator NUMBER C_PAREN
    (9) expr -> . O_PAREN VARIABLE_NAME operator expr C_PAREN
    (10) expr -> . O_PAREN NUMBER operator VARIABLE_NAME C_PAREN
    (11) expr -> . O_PAREN expr operator VARIABLE_NAME C_PAREN
    (12) expr -> . O_PAREN expr operator expr C_PAREN
    (13) expr -> . O_PAREN NUMBER operator expr C_PAREN
    (14) expr -> . O_PAREN expr operator NUMBER C_PAREN
    (15) expr -> . O_PAREN NUMBER operator NUMBER C_PAREN

    VARIABLE_NAME   shift and go to state 25
    NUMBER          shift and go to state 26
    O_PAREN         shift and go to state 10

    expr                           shift and go to state 27

state 19

    (3) operator -> PLUS .

    VARIABLE_NAME   reduce using rule 3 (operator -> PLUS .)
    NUMBER          reduce using rule 3 (operator -> PLUS .)
    O_PAREN         reduce using rule 3 (operator -> PLUS .)


state 20

    (4) operator -> MINUS .

    VARIABLE_NAME   reduce using rule 4 (operator -> MINUS .)
    NUMBER          reduce using rule 4 (operator -> MINUS .)
    O_PAREN         reduce using rule 4 (operator -> MINUS .)


state 21

    (5) operator -> MULT .

    VARIABLE_NAME   reduce using rule 5 (operator -> MULT .)
    NUMBER          reduce using rule 5 (operator -> MULT .)
    O_PAREN         reduce using rule 5 (operator -> MULT .)


state 22

    (6) operator -> DIV .

    VARIABLE_NAME   reduce using rule 6 (operator -> DIV .)
    NUMBER          reduce using rule 6 (operator -> DIV .)
    O_PAREN         reduce using rule 6 (operator -> DIV .)


state 23

    (10) expr -> O_PAREN NUMBER operator . VARIABLE_NAME C_PAREN
    (13) expr -> O_PAREN NUMBER operator . expr C_PAREN
    (15) expr -> O_PAREN NUMBER operator . NUMBER C_PAREN
    (7) expr -> . O_PAREN VARIABLE_NAME operator VARIABLE_NAME C_PAREN
    (8) expr -> . O_PAREN VARIABLE_NAME operator NUMBER C_PAREN
    (9) expr -> . O_PAREN VARIABLE_NAME operator expr C_PAREN
    (10) expr -> . O_PAREN NUMBER operator VARIABLE_NAME C_PAREN
    (11) expr -> . O_PAREN expr operator VARIABLE_NAME C_PAREN
    (12) expr -> . O_PAREN expr operator expr C_PAREN
    (13) expr -> . O_PAREN NUMBER operator expr C_PAREN
    (14) expr -> . O_PAREN expr operator NUMBER C_PAREN
    (15) expr -> . O_PAREN NUMBER operator NUMBER C_PAREN

    VARIABLE_NAME   shift and go to state 29
    NUMBER          shift and go to state 28
    O_PAREN         shift and go to state 10

    expr                           shift and go to state 30

state 24

    (11) expr -> O_PAREN expr operator . VARIABLE_NAME C_PAREN
    (12) expr -> O_PAREN expr operator . expr C_PAREN
    (14) expr -> O_PAREN expr operator . NUMBER C_PAREN
    (7) expr -> . O_PAREN VARIABLE_NAME operator VARIABLE_NAME C_PAREN
    (8) expr -> . O_PAREN VARIABLE_NAME operator NUMBER C_PAREN
    (9) expr -> . O_PAREN VARIABLE_NAME operator expr C_PAREN
    (10) expr -> . O_PAREN NUMBER operator VARIABLE_NAME C_PAREN
    (11) expr -> . O_PAREN expr operator VARIABLE_NAME C_PAREN
    (12) expr -> . O_PAREN expr operator expr C_PAREN
    (13) expr -> . O_PAREN NUMBER operator expr C_PAREN
    (14) expr -> . O_PAREN expr operator NUMBER C_PAREN
    (15) expr -> . O_PAREN NUMBER operator NUMBER C_PAREN

    VARIABLE_NAME   shift and go to state 32
    NUMBER          shift and go to state 33
    O_PAREN         shift and go to state 10

    expr                           shift and go to state 31

state 25

    (7) expr -> O_PAREN VARIABLE_NAME operator VARIABLE_NAME . C_PAREN

    C_PAREN         shift and go to state 34


state 26

    (8) expr -> O_PAREN VARIABLE_NAME operator NUMBER . C_PAREN

    C_PAREN         shift and go to state 35


state 27

    (9) expr -> O_PAREN VARIABLE_NAME operator expr . C_PAREN

    C_PAREN         shift and go to state 36


state 28

    (15) expr -> O_PAREN NUMBER operator NUMBER . C_PAREN

    C_PAREN         shift and go to state 37


state 29

    (10) expr -> O_PAREN NUMBER operator VARIABLE_NAME . C_PAREN

    C_PAREN         shift and go to state 38


state 30

    (13) expr -> O_PAREN NUMBER operator expr . C_PAREN

    C_PAREN         shift and go to state 39


state 31

    (12) expr -> O_PAREN expr operator expr . C_PAREN

    C_PAREN         shift and go to state 40


state 32

    (11) expr -> O_PAREN expr operator VARIABLE_NAME . C_PAREN

    C_PAREN         shift and go to state 41


state 33

    (14) expr -> O_PAREN expr operator NUMBER . C_PAREN

    C_PAREN         shift and go to state 42


state 34

    (7) expr -> O_PAREN VARIABLE_NAME operator VARIABLE_NAME C_PAREN .

    SEMICOLON       reduce using rule 7 (expr -> O_PAREN VARIABLE_NAME operator VARIABLE_NAME C_PAREN .)
    PLUS            reduce using rule 7 (expr -> O_PAREN VARIABLE_NAME operator VARIABLE_NAME C_PAREN .)
    MINUS           reduce using rule 7 (expr -> O_PAREN VARIABLE_NAME operator VARIABLE_NAME C_PAREN .)
    MULT            reduce using rule 7 (expr -> O_PAREN VARIABLE_NAME operator VARIABLE_NAME C_PAREN .)
    DIV             reduce using rule 7 (expr -> O_PAREN VARIABLE_NAME operator VARIABLE_NAME C_PAREN .)
    C_PAREN         reduce using rule 7 (expr -> O_PAREN VARIABLE_NAME operator VARIABLE_NAME C_PAREN .)


state 35

    (8) expr -> O_PAREN VARIABLE_NAME operator NUMBER C_PAREN .

    SEMICOLON       reduce using rule 8 (expr -> O_PAREN VARIABLE_NAME operator NUMBER C_PAREN .)
    PLUS            reduce using rule 8 (expr -> O_PAREN VARIABLE_NAME operator NUMBER C_PAREN .)
    MINUS           reduce using rule 8 (expr -> O_PAREN VARIABLE_NAME operator NUMBER C_PAREN .)
    MULT            reduce using rule 8 (expr -> O_PAREN VARIABLE_NAME operator NUMBER C_PAREN .)
    DIV             reduce using rule 8 (expr -> O_PAREN VARIABLE_NAME operator NUMBER C_PAREN .)
    C_PAREN         reduce using rule 8 (expr -> O_PAREN VARIABLE_NAME operator NUMBER C_PAREN .)


state 36

    (9) expr -> O_PAREN VARIABLE_NAME operator expr C_PAREN .

    SEMICOLON       reduce using rule 9 (expr -> O_PAREN VARIABLE_NAME operator expr C_PAREN .)
    PLUS            reduce using rule 9 (expr -> O_PAREN VARIABLE_NAME operator expr C_PAREN .)
    MINUS           reduce using rule 9 (expr -> O_PAREN VARIABLE_NAME operator expr C_PAREN .)
    MULT            reduce using rule 9 (expr -> O_PAREN VARIABLE_NAME operator expr C_PAREN .)
    DIV             reduce using rule 9 (expr -> O_PAREN VARIABLE_NAME operator expr C_PAREN .)
    C_PAREN         reduce using rule 9 (expr -> O_PAREN VARIABLE_NAME operator expr C_PAREN .)


state 37

    (15) expr -> O_PAREN NUMBER operator NUMBER C_PAREN .

    SEMICOLON       reduce using rule 15 (expr -> O_PAREN NUMBER operator NUMBER C_PAREN .)
    PLUS            reduce using rule 15 (expr -> O_PAREN NUMBER operator NUMBER C_PAREN .)
    MINUS           reduce using rule 15 (expr -> O_PAREN NUMBER operator NUMBER C_PAREN .)
    MULT            reduce using rule 15 (expr -> O_PAREN NUMBER operator NUMBER C_PAREN .)
    DIV             reduce using rule 15 (expr -> O_PAREN NUMBER operator NUMBER C_PAREN .)
    C_PAREN         reduce using rule 15 (expr -> O_PAREN NUMBER operator NUMBER C_PAREN .)


state 38

    (10) expr -> O_PAREN NUMBER operator VARIABLE_NAME C_PAREN .

    SEMICOLON       reduce using rule 10 (expr -> O_PAREN NUMBER operator VARIABLE_NAME C_PAREN .)
    PLUS            reduce using rule 10 (expr -> O_PAREN NUMBER operator VARIABLE_NAME C_PAREN .)
    MINUS           reduce using rule 10 (expr -> O_PAREN NUMBER operator VARIABLE_NAME C_PAREN .)
    MULT            reduce using rule 10 (expr -> O_PAREN NUMBER operator VARIABLE_NAME C_PAREN .)
    DIV             reduce using rule 10 (expr -> O_PAREN NUMBER operator VARIABLE_NAME C_PAREN .)
    C_PAREN         reduce using rule 10 (expr -> O_PAREN NUMBER operator VARIABLE_NAME C_PAREN .)


state 39

    (13) expr -> O_PAREN NUMBER operator expr C_PAREN .

    SEMICOLON       reduce using rule 13 (expr -> O_PAREN NUMBER operator expr C_PAREN .)
    PLUS            reduce using rule 13 (expr -> O_PAREN NUMBER operator expr C_PAREN .)
    MINUS           reduce using rule 13 (expr -> O_PAREN NUMBER operator expr C_PAREN .)
    MULT            reduce using rule 13 (expr -> O_PAREN NUMBER operator expr C_PAREN .)
    DIV             reduce using rule 13 (expr -> O_PAREN NUMBER operator expr C_PAREN .)
    C_PAREN         reduce using rule 13 (expr -> O_PAREN NUMBER operator expr C_PAREN .)


state 40

    (12) expr -> O_PAREN expr operator expr C_PAREN .

    SEMICOLON       reduce using rule 12 (expr -> O_PAREN expr operator expr C_PAREN .)
    PLUS            reduce using rule 12 (expr -> O_PAREN expr operator expr C_PAREN .)
    MINUS           reduce using rule 12 (expr -> O_PAREN expr operator expr C_PAREN .)
    MULT            reduce using rule 12 (expr -> O_PAREN expr operator expr C_PAREN .)
    DIV             reduce using rule 12 (expr -> O_PAREN expr operator expr C_PAREN .)
    C_PAREN         reduce using rule 12 (expr -> O_PAREN expr operator expr C_PAREN .)


state 41

    (11) expr -> O_PAREN expr operator VARIABLE_NAME C_PAREN .

    SEMICOLON       reduce using rule 11 (expr -> O_PAREN expr operator VARIABLE_NAME C_PAREN .)
    PLUS            reduce using rule 11 (expr -> O_PAREN expr operator VARIABLE_NAME C_PAREN .)
    MINUS           reduce using rule 11 (expr -> O_PAREN expr operator VARIABLE_NAME C_PAREN .)
    MULT            reduce using rule 11 (expr -> O_PAREN expr operator VARIABLE_NAME C_PAREN .)
    DIV             reduce using rule 11 (expr -> O_PAREN expr operator VARIABLE_NAME C_PAREN .)
    C_PAREN         reduce using rule 11 (expr -> O_PAREN expr operator VARIABLE_NAME C_PAREN .)


state 42

    (14) expr -> O_PAREN expr operator NUMBER C_PAREN .

    SEMICOLON       reduce using rule 14 (expr -> O_PAREN expr operator NUMBER C_PAREN .)
    PLUS            reduce using rule 14 (expr -> O_PAREN expr operator NUMBER C_PAREN .)
    MINUS           reduce using rule 14 (expr -> O_PAREN expr operator NUMBER C_PAREN .)
    MULT            reduce using rule 14 (expr -> O_PAREN expr operator NUMBER C_PAREN .)
    DIV             reduce using rule 14 (expr -> O_PAREN expr operator NUMBER C_PAREN .)
    C_PAREN         reduce using rule 14 (expr -> O_PAREN expr operator NUMBER C_PAREN .)

